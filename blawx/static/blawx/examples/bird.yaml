- model: blawx.ruledoc
  pk: 6
  fields:
    owner: 3
    ruledoc_name: Bird Act
    rule_text: "Bird Act\r\n\r\n1. A Penguin is a Bird.\r\n2. If a thing is a bird,
      it flies, [penguin]{unless it is a penguin}."
    scasp_encoding: ''
    tutorial: ''
- model: blawx.workspace
  pk: 47
  fields:
    ruledoc: 6
    workspace_name: root_section
    xml_content: ''
    scasp_encoding: ''
- model: blawx.workspace
  pk: 48
  fields:
    ruledoc: 6
    workspace_name: sec_1_section
    xml_content: <xml xmlns="https://developers.google.com/blockly/xml"><block type="unattributed_fact"
      id="1!=3XhATcqkhE,+G7!n`" x="29" y="21"><statement name="statements"><block
      type="category_declaration" id="?C.KFD2kEO21E6W.ONks"><field name="category_name">penguin</field><next><block
      type="category_declaration" id="3P~S8bHQO]oK}4]=?JHC"><field name="category_name">bird</field><next><block
      type="category_equivalence" id="|Ms$@Ek/S05Q$f?g:zhg"><value name="first_category"><block
      type="category_selector" id="{[?,M5$]USglT$G/I=~K"><mutation xmlns="http://www.w3.org/1999/xhtml"
      category_name="penguin"></mutation><field name="category_name">penguin</field></block></value><value
      name="second_category"><block type="category_selector" id="fS^El;2:!U_S-pl}Lf5`"><mutation
      xmlns="http://www.w3.org/1999/xhtml" category_name="bird"></mutation><field
      name="category_name">bird</field></block></value></block></next></block></next></block></statement></block></xml>
    scasp_encoding: 'blawx_category(penguin).

      #pred penguin(X) :: ''@(X) is a penguin''.

      #pred according_to(R,penguin(X)) :: ''according to @(R), @(X) is a penguin''.

      #pred legally_holds(_,penguin(X)) :: ''it legally holds that @(X) is a penguin''.

      blawx_category(bird).

      #pred bird(X) :: ''@(X) is a bird''.

      #pred according_to(R,bird(X)) :: ''according to @(R), @(X) is a bird''.

      #pred legally_holds(_,bird(X)) :: ''it legally holds that @(X) is a bird''.

      bird(X) :-

      penguin(X).'
- model: blawx.workspace
  pk: 49
  fields:
    ruledoc: 6
    workspace_name: sec_2_section
    xml_content: <xml xmlns="https://developers.google.com/blockly/xml"><block type="unattributed_fact"
      id="j$faOKXkM8#g]oq9F5O8" x="46" y="14"><statement name="statements"><block
      type="category_declaration" id="*;NX[+pzHTo3+A(iM0=0"><field name="category_name">thing</field><next><block
      type="category_attribute" id="j$^nQ1H=P{.d8eu(VHaf"><value name="category"><block
      type="category_selector" id="8TI5KQCm`44|351qKGY~"><mutation xmlns="http://www.w3.org/1999/xhtml"
      category_name="thing"></mutation><field name="category_name">thing</field></block></value><statement
      name="attributes"><block type="attribute_declaration" id="s(m+;9RiNOHv,kIl4TT3"><mutation
      xmlns="http://www.w3.org/1999/xhtml" attribute_name="flies" attribute_type="CATEGORY"></mutation><field
      name="attribute_name">flies</field><value name="attribute_type"><block type="true_false_type_selector"
      id="A}j#z2tAyf2Z=IU}rfWr"></block></value><next><block type="attribute_display"
      id="A2iY=RJDuRFEj9utEl7f"><field name="order">vo</field><field name="prefix">it
      is</field><field name="first_element">value</field><field name="infix">that</field><field
      name="second_element">object</field><field name="postfix">flies</field></block></next></block></statement><next><block
      type="category_equivalence" id="bu=Q+{c/Z,UD.Fb)`7ZG"><value name="first_category"><block
      type="category_selector" id="W?i[fBo#$z#7Hh;BVh#V"><mutation xmlns="http://www.w3.org/1999/xhtml"
      category_name="bird"></mutation><field name="category_name">bird</field></block></value><value
      name="second_category"><block type="category_selector" id="iibAap;%gvy$C8:Aze5v"><mutation
      xmlns="http://www.w3.org/1999/xhtml" category_name="thing"></mutation><field
      name="category_name">thing</field></block></value></block></next></block></next></block></statement></block><block
      type="unattributed_rule" id="6?fZqZY3/+aZs_yOf+CV" x="45" y="292"><statement
      name="conditions"><block type="object_category" id="|w-~zBf|+TP7mA}ZjbTm"><value
      name="object"><block type="variable" id="BosqU04_8`F4cX%R7H$4"><field name="variable_name">A</field></block></value><value
      name="category"><block type="category_selector" id="glOF`upu#69fTb]$5P)U"><mutation
      xmlns="http://www.w3.org/1999/xhtml" category_name="bird"></mutation><field
      name="category_name">bird</field></block></value></block></statement><statement
      name="conclusion"><block type="according_to" id="]!AH[LfAbhnCX[A)%IFL"><value
      name="rule"><block type="doc_selector" id="k=^[Sv)tUg[)*rpIWz3|"><mutation xmlns="http://www.w3.org/1999/xhtml"
      section_reference="sec_2_section"></mutation><field name="doc_part_name">BA
      2</field></block></value><statement name="statement"><block type="attribute_selector"
      id=",y:Jk{%Am^H6g4$?amZ@"><mutation xmlns="http://www.w3.org/1999/xhtml" attributename="flies"
      attributetype="Checkmark True / False" attributeorder="vo"></mutation><field
      name="prefix">it is</field><field name="infix">that</field><field name="postfix">flies</field><value
      name="first_element"><block type="true_value" id="%k?[?d}5k4mYi|CFK:Y7"></block></value><value
      name="second_element"><block type="variable" id="$=:FBU4WdZ*T`WJ+KBY6"><field
      name="variable_name">A</field></block></value></block></statement></block></statement></block></xml>
    scasp_encoding: 'blawx_category(thing).

      #pred thing(X) :: ''@(X) is a thing''.

      #pred according_to(R,thing(X)) :: ''according to @(R), @(X) is a thing''.

      #pred legally_holds(_,thing(X)) :: ''it legally holds that @(X) is a thing''.

      blawx_attribute(thing,flies,boolean).

      blawx_attribute_nlg(flies,vo,"it is","that","flies").

      #pred flies(Y,X) :: ''it is @(X) that @(Y) flies''.

      #pred according_to(R,flies(Y,X)) :: ''according to @(R), it is @(X) that @(Y)
      flies''.

      #pred legally_holds(_,flies(Y,X)) :: ''it legally holds that it is @(X) that
      @(Y) flies''.

      opposes(flies(X,true),flies(X,false)).

      opposes(flies(X,false),flies(X,true)).


      thing(X) :-

      bird(X).


      according_to(sec_2_section,  flies(A,true)) :-

      bird(A).'
- model: blawx.workspace
  pk: 50
  fields:
    ruledoc: 6
    workspace_name: sec_2__span_penguin_section
    xml_content: <xml xmlns="https://developers.google.com/blockly/xml"><block type="unattributed_rule"
      id="v*SRmEi3pH763OYJq|KD" x="48" y="126"><statement name="conditions"><block
      type="object_category" id="4mm1v|a~4L]sS3YnE,G;"><value name="object"><block
      type="variable" id="x);G)U0x6rH0iv{-kvMm"><field name="variable_name">A</field></block></value><value
      name="category"><block type="category_selector" id="bXI$~BjuWYp6{9Y@ukNr"><mutation
      xmlns="http://www.w3.org/1999/xhtml" category_name="penguin"></mutation><field
      name="category_name">penguin</field></block></value></block></statement><statement
      name="conclusion"><block type="according_to" id="FMpf14kfg^mu4~(#xph?"><value
      name="rule"><block type="doc_selector" id="O~?~iwJ%WmtGB,Qz=}b("><mutation xmlns="http://www.w3.org/1999/xhtml"
      section_reference="sec_2__span_penguin_section"></mutation><field name="doc_part_name">BA
      2penguin</field></block></value><statement name="statement"><block type="attribute_selector"
      id="uTV54%14)U}^T-7{e^T#"><mutation xmlns="http://www.w3.org/1999/xhtml" attributename="flies"
      attributetype="Checkmark True / False" attributeorder="vo"></mutation><field
      name="prefix">it is</field><field name="infix">that</field><field name="postfix">flies</field><value
      name="first_element"><block type="false_value" id=":Wt$Feq#6:i/PkqzrE`m"></block></value><value
      name="second_element"><block type="variable" id="/e27:KP!fRzOK#Sxlazp"><field
      name="variable_name">A</field></block></value></block></statement></block></statement></block><block
      type="unattributed_fact" id="IO9/.,Irf{;C1^Yx?g1K" x="46" y="310"><statement
      name="statements"><block type="overrules" id="-~*=Isc`r)08^UXT)2~~"><value name="defeating_rule"><block
      type="doc_selector" id="{5Oqbf](E#@HB-(dNR6]"><mutation xmlns="http://www.w3.org/1999/xhtml"
      section_reference="sec_2__span_penguin_section"></mutation><field name="doc_part_name">BA
      2penguin</field></block></value><value name="defeated_rule"><block type="doc_selector"
      id="B/:zF{{r}/X(+?Ual(m|"><mutation xmlns="http://www.w3.org/1999/xhtml" section_reference="sec_2_section"></mutation><field
      name="doc_part_name">BA 2</field></block></value></block></statement></block></xml>
    scasp_encoding: 'according_to(sec_2__span_penguin_section,  flies(A,false)) :-

      penguin(A).


      overrules(sec_2__span_penguin_section,sec_2_section).'
- model: blawx.blawxtest
  pk: 6
  fields:
    ruledoc: 6
    test_name: tweety
    xml_content: <xml xmlns="https://developers.google.com/blockly/xml"><block type="unattributed_fact"
      id="!_OG4OLP?RG1_nnO@)??" x="74" y="49"><statement name="statements"><block
      type="object_declaration" id="E^n)El`).#e/px1k9O(Z"><mutation xmlns="http://www.w3.org/1999/xhtml"
      category_name="penguin" prefix="null" postfix="null"></mutation><field name="prefix"></field><field
      name="object_name">tweety</field><field name="postfix">is a penguin</field></block></statement></block><block
      type="query" id="yLZRoj,S`oekI_y*{kip" x="59" y="157"><statement name="query"><block
      type="holds" id="3H8/*vt$a~85UEiossL9"><statement name="statement"><block type="attribute_selector"
      id="3qllX@`/Pbg0snWJFBK,"><mutation xmlns="http://www.w3.org/1999/xhtml" attributename="flies"
      attributetype="Checkmark True / False" attributeorder="vo"></mutation><field
      name="prefix">it is</field><field name="infix">that</field><field name="postfix">flies</field><value
      name="first_element"><block type="variable" id="BxC:d9g+6DYY6l@I=5]["><field
      name="variable_name">A</field></block></value><value name="second_element"><block
      type="object_selector" id="lZ]]C~8RT[`RwZTaiD1j"><mutation xmlns="http://www.w3.org/1999/xhtml"
      objectname="tweety"></mutation><field name="object_name">tweety</field></block></value></block></statement></block></statement></block></xml>
    scasp_encoding: 'penguin(tweety).


      ?- legally_holds(_,  flies(tweety,A)).'
- model: blawx.blawxtest
  pk: 7
  fields:
    ruledoc: 6
    test_name: negation
    xml_content: <xml xmlns="https://developers.google.com/blockly/xml"><block type="unattributed_fact"
      id="B`ucszQD3S|IX{pdrPS3" x="99" y="83"><statement name="statements"><block
      type="object_declaration" id="nO42bKu=4qjq2vcZmTxS"><mutation xmlns="http://www.w3.org/1999/xhtml"
      category_name="penguin" prefix="null" postfix="null"></mutation><field name="prefix"></field><field
      name="object_name">tweety</field><field name="postfix">is a penguin</field></block></statement></block><block
      type="query" id="`2@DgIS0!F)Xi1|H!JaE" x="69" y="220"><statement name="query"><block
      type="default_negation" id="[;~X!!1dd6e7T5LfWklk"><statement name="default_negated_statement"><block
      type="holds" id="?uBE$;IMDy:D$rcnIm6K"><statement name="statement"><block type="attribute_selector"
      id="{i@4(!3:o=+4fD~MMP*G"><mutation xmlns="http://www.w3.org/1999/xhtml" attributename="flies"
      attributetype="Checkmark True / False" attributeorder="vo"></mutation><field
      name="prefix">it is</field><field name="infix">that</field><field name="postfix">flies</field><value
      name="first_element"><block type="true_value" id="@K9W[=WCZfHtaTcVe$E_"></block></value><value
      name="second_element"><block type="object_selector" id="5Wq{eQDw6/eNk=A0NUZI"><mutation
      xmlns="http://www.w3.org/1999/xhtml" objectname="tweety"></mutation><field name="object_name">tweety</field></block></value></block></statement></block></statement></block></statement></block></xml>
    scasp_encoding: 'penguin(tweety).


      ?- not legally_holds(_,  flies(tweety,true)).'
